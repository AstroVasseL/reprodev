{
  "hash": "de7058b2390b9fff0bd748148e2d51cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tutorial 1\"\nsubtitle: \"Reproducible programming with [`Quarto`](https://quarto.org)\"\nauthors:\n  - name: \"Gerko Vink\"\n    orcid: \"0000-0001-9767-1924\"\neditor: source\n---\n\n\n::: callout-note\n## Learning objectives in the tutorials\nThis is a group project. Form groups of 3-4 people. Each group will work together on a mode of collaborative and open development.\n\n- Tutorial 1: Create a group research compendium\n- Tutorial 2: Publish the group compendium by means of open development standards and create a reproducible group website\n- Tutorial 3: Create an individual FAIR R package and commit it to the group page, together with your group projects. \n:::\n\nWe are going to use the `Quarto` publishing environment to create a reproducible research compendium. This is the first of two `Quarto`-related tutorials. In this tutorial, we will set up the project structure and fill the documents and create a reproduvible research compendium. The structure of this compendium is based on [these workshop materials](https://utrechtuniversity.github.io/workshop-reproducible-manuscripts/workshop-materials.html). In [the second tutorial](tutorial_2.html), we will publish the compendium and create a reproducible website with `Quarto`.\n\n# Open and collaborative\nThis course has its own repository at `GitHub` where you can find all sources for the materials, the slides, the tutorials and the rendered course page. The materials in this course are fully open, which would allow anyone to take, borrow and  modify these materials to their liking and even contribute to the source of these materials directly If you look carefully to your right, you see a link that to `edit this page`. This link will take you directly to the `GitHub` source of this page. \n\n# Course materials\nThe tutorial materials consist of a project structure (borrowed from [here](https://utrechtuniversity.github.io/workshop-reproducible-manuscripts/workshop-materials.html)) and dummy scripts that we will use, fill and later on publish. \n\nWe will work in `R`, althought the materials and flow would be easily applicable to `Python`. The reason for the focus on `R` is to set up a development mode for the next session that I will give on May 31. Because we are focusing on development in `R`, I will outline the `RStudio IDE` workflows. It is not hard to adapt these workflows to e.g. `VScode` or `Jupyter Lab`.\n\nThat said, the materials are available [in this branch of the course repository](https://github.com/gerkovink/reprodev/tree/exercise_quarto). \nYou can download the materials by following these steps:\n\n1. Open the [`exercise_quarto` branch](https://github.com/gerkovink/reprodev/tree/exercise_quarto).\n2. Click on the green `Code` button and select `Download ZIP`.\n\n![](tutorial_1_img/down.png)\n\n3. Save the zip file in a location that you can easily access. We recommend to **not** use the default download location of your browser.\n4. Extract the contents of the zipped file.\n\nThe materials should look like this:\n\n```\nreprodev-exercise_quarto\n├── data\n│   └── data.csv\n├── docs\n├── results\n└── scripts\n│   ├── do_addition.py\n│   ├── do_addition.R\n│   ├── dummy.py\n│   └── dummy.R\n├── LICENSE.md\n└── README.md\n```\n\n# Let's start\nIf you've followed the above steps, you can start creating the Quarto document that your group will work on in this tutorial.\n\n::: {.panel-tabset}\n\n## Rstudio\n\n**1. Create an RStudio Project**\n\n- In RStudio, click _File_ > _New Project_ > _Existing Directory_. \n- Browse to your folder `reprodev-exercise_quarto` in which you have saved the workshop materials.\n- Check the _Open in new session_ option.\n- Click _Create Project_. This will create a `reprodev-exercise_quarto.Rproj` file.\n\n**2. Document your project for reproducibility**\n\nYour project already contains pre-made folders, a README file and a License.\nOpen the `README.md` file and fill it with a few relevant details, for example:\n\n- Purpose and contents of the project\n- Your names (Authors)\n- The date of creation\n- Etc.\n\n**3. Create a Quarto document for your manuscript.**\n\n- In RStudio, click _File_ -> _New File_ -> _Quarto Document_\n- Give your document a title, such as `reprodev-exercise_quarto`.\n- Add yourselves as authors. A great way to do this is by including some persistent digital identifier, like an [ORCID](https://orcid.org) iD. See e.g. the following code block\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauthors:\n  - name: \"Gerko Vink\"\n    orcid: \"0000-0001-9767-1924\"\n  - name: \"Your Name\"\n    orcid: \"0000-0000-0000-0000\"\n  - name: \"Your Name\"\n    orcid: \"0000-0000-0000-0000\"\n  - name: \"Your Name\"\n    orcid: \"0000-0000-0000-0000\"\n```\n:::\n\n\n- For now, the default output format (HTML) and engine (knitr) are fine.\n- Uncheck the _Use visual markdown editor_ option.\n- Click _Create_. A new Quarto document opens.\n\n**4. Render the Quarto document to HTML**\n\n- Save the Quarto document in the `docs` folder within the `reprodev-exercise_quarto` folder.  \nGive the file a clear name, without using  spaces. For example, `reprodev-exercise_quarto.qmd` or `my-manuscript.qmd`.\n- Once everything has been saved correctly, click the _Render_ button in the menu bar.\n- The rendered HTML copy of your document will appear in your web browser or alongside the editor in RStudio. You will also see a `yourchosenfilename.html` file appear in the `docs` folder.\n:::\n\n# Add some syntax\nRecreate the following paragraph in your Quarto document using Markdown:\n\n```markdown\nMeet Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. \nTo learn more about Quarto see https://quarto.org.\n\nMeet the boys data \n\nThe boys data from the mice package is a random sample of 10% from the cross-sectional data used to construct the Dutch growth references 1997. Variables gen and phb are ordered factors. reg is a factor.\n\nThe plot below shows the missing data pattern for the boys as generated by the ggmice package.\n```\n\n## What It Should Look Like\nBelow is an image of the rendered output. Try to recreate it in your Quarto document.\n\n![](tutorial_1_img/quarto.png)\n\n## Links you need\n\n- You can find the link to the development repo of the `mice` package here: [https://github.com/amices/mice](https://github.com/amices/mice)\n- The link to the `mice` logo is: [https://amices.org/mice/logo.png](https://amices.org/mice/logo.png)\n\n## Don't struggle for too long\n::: {.callout-caution collapse=\"true\"}\n## Expand to see the solution\n````\n# Meet `Quarto`\n\n`Quarto` enables you to weave together content and executable code into a finished document. \nTo learn more about Quarto see [https://quarto.org](https://quarto.org).\n\n# Meet the `boys` data \nThe `boys` data from the [`mice`](https://github.com/amices/mice){.pkg} package in [`R`]{.proglang} is a random sample of 10% from the cross-sectional data used to construct the Dutch growth references 1997. Variables `gen` and `phb` are ordered factors. `reg` is a factor.\n\nThe following table shows the first 6 rows of the `boys` data.\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n```{{r}}\nhead(mice::boys)\n```\n:::\n\n::: {.column width=\"40%\"}\n![](https://amices.org/mice/logo.png){fig-align=\"right\" width=60%}\n:::\n::::\n\n````\n::: \n\n# Advanced options\n\n::: {.panel-tabset}\n\n## References\n\nNow let's start with a quick investigation into the `boys` data and its missingness. \n\n1. Add the following syntax to your `Quarto` document:\n\n````\n# The `boys` set is incomplete\nNot every value in the `mice::boys` set is observed. This may pose problems with the analysis of the `boys` data. To get an idea about the problem, we can use the [`ggmice`](https://github.com/amices/ggmice){.pkg} package to create a [`ggplot2`](https://ggplot2.tidyverse.org){.pkg} type plot of the missing values in the `boys` data.\n\n```{{r mdpattern}}\nggmice::plot_pattern(mice::boys)\n```\n\n````\n\nThe above syntax uses the `Quarto` referencing environment to create a reference for the `ggplot2` package. \n\n2. \n\n## `renv`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}